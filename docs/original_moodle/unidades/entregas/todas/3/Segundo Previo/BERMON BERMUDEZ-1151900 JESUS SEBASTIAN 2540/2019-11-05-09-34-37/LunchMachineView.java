
import java.awt.Color;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import java.awt.Font;
import java.awt.Dimension;
import javax.swing.JTextField;
import javax.swing.JButton;
import java.awt.GridLayout;
import java.awt.Toolkit;
import javax.swing.WindowConstants;
import javax.swing.SwingConstants;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author (Milton Jesús Vera Contreras - miltonjesusvc@ufps.edu.co)
 * @version 0.000000000000001 :) --> Math.sin(Math.PI-Double.MIN_VALUE)
 */
public class LunchMachineView extends javax.swing.JFrame {

    private Restaurante restaurante;
    private LunchMachineComprarView viewComprar;

    /**
     * Creates new form CoffeeMachineView
     */
    public LunchMachineView() {
        restaurante = new Restaurante();
        initComponents();
        center();
        actualizarGUI();
        viewComprar = new LunchMachineComprarView(this);
        cargarCombos();
    }

    private void cargarCombos() {
        comboFruta.setModel(new javax.swing.DefaultComboBoxModel<>(restaurante.getNombresFrutas()));
        comboProteina.setModel(new javax.swing.DefaultComboBoxModel<>(restaurante.getNombresProteinas()));
        comboGrano.setModel(new javax.swing.DefaultComboBoxModel<>(restaurante.getNombresGranos()));
        comboAlmidon.setModel(new javax.swing.DefaultComboBoxModel<>(restaurante.getNombresAlmidones()));
        viewComprar.getComboIngredientes().setModel(new javax.swing.DefaultComboBoxModel<>(restaurante.getNombresIngredientes()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblImagen = new javax.swing.JLabel();
        panelMenu = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        panelDatos = new javax.swing.JPanel();
        lblFruta = new javax.swing.JLabel();
        comboFruta = new javax.swing.JComboBox<>();
        lblProteina = new javax.swing.JLabel();
        comboProteina = new javax.swing.JComboBox<>();
        lblGrano = new javax.swing.JLabel();
        comboGrano = new javax.swing.JComboBox<>();
        lblAmidon = new javax.swing.JLabel();
        comboAlmidon = new javax.swing.JComboBox<>();
        lblPrecioAlmuerzo = new javax.swing.JLabel();
        txtPrecioAlmuerzo = new javax.swing.JTextField();
        lblSePuedePreparar_ = new javax.swing.JLabel();
        lblSePuedePreparar = new javax.swing.JLabel();
        lblIngresos = new javax.swing.JLabel();
        txtIngresos = new javax.swing.JTextField();
        lblEgresos = new javax.swing.JLabel();
        txtEgresos = new javax.swing.JTextField();
        lblIVA = new javax.swing.JLabel();
        txtIVA = new javax.swing.JTextField();
        lblGananciasNetas = new javax.swing.JLabel();
        txtGananciasNetas = new javax.swing.JTextField();
        panelBotones = new javax.swing.JPanel();
        cmdRegistrarCompraIgrediente = new javax.swing.JButton();
        cmdRegistrarVenta = new javax.swing.JButton();
        cmdCargarDeDisco = new javax.swing.JButton();
        cmdGuardarADisco = new javax.swing.JButton();
        cmdSalir1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lunch Vending Machine - Principal");
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        setResizable(false);
        getContentPane().setLayout(new java.awt.BorderLayout());

        lblImagen.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lunch-machine.png"))); // NOI18N
        lblImagen.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        getContentPane().add(lblImagen, java.awt.BorderLayout.EAST);

        panelMenu.setBackground(new java.awt.Color(255, 255, 255));
        panelMenu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelMenu.setLayout(new java.awt.GridLayout(1, 3));

        lblTitulo.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/motilon-brand.png"))); // NOI18N
        lblTitulo.setToolTipText("");
        panelMenu.add(lblTitulo);

        getContentPane().add(panelMenu, java.awt.BorderLayout.PAGE_START);

        panelDatos.setBackground(new java.awt.Color(255, 255, 255));
        panelDatos.setLayout(new java.awt.GridLayout(10, 2));

        lblFruta.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblFruta.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFruta.setText("Fruta:");
        lblFruta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelDatos.add(lblFruta);

        comboFruta.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        comboFruta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboFrutaActionPerformed(evt);
            }
        });
        panelDatos.add(comboFruta);

        lblProteina.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblProteina.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblProteina.setText("Proteina:");
        lblProteina.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelDatos.add(lblProteina);

        comboProteina.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        comboProteina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboProteinaActionPerformed(evt);
            }
        });
        panelDatos.add(comboProteina);

        lblGrano.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblGrano.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblGrano.setText("Grano:");
        lblGrano.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelDatos.add(lblGrano);

        comboGrano.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        comboGrano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboGranoActionPerformed(evt);
            }
        });
        panelDatos.add(comboGrano);

        lblAmidon.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblAmidon.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAmidon.setText("Almidón:");
        lblAmidon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelDatos.add(lblAmidon);

        comboAlmidon.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        comboAlmidon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboAlmidonActionPerformed(evt);
            }
        });
        panelDatos.add(comboAlmidon);

        lblPrecioAlmuerzo.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblPrecioAlmuerzo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPrecioAlmuerzo.setText("Precio del Almuerzo $$$:");
        lblPrecioAlmuerzo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelDatos.add(lblPrecioAlmuerzo);

        txtPrecioAlmuerzo.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtPrecioAlmuerzo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPrecioAlmuerzo.setText("0");
        txtPrecioAlmuerzo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtPrecioAlmuerzo.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtPrecioAlmuerzo.setEnabled(false);
        panelDatos.add(txtPrecioAlmuerzo);

        lblSePuedePreparar_.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblSePuedePreparar_.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSePuedePreparar_.setText("¿Se Puede Preparar?");
        lblSePuedePreparar_.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelDatos.add(lblSePuedePreparar_);

        lblSePuedePreparar.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblSePuedePreparar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSePuedePreparar.setText("NO");
        lblSePuedePreparar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelDatos.add(lblSePuedePreparar);

        lblIngresos.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblIngresos.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblIngresos.setText("Ingresos por Ventas $$$:");
        lblIngresos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelDatos.add(lblIngresos);

        txtIngresos.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtIngresos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtIngresos.setText("0");
        txtIngresos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtIngresos.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtIngresos.setEnabled(false);
        panelDatos.add(txtIngresos);

        lblEgresos.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblEgresos.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblEgresos.setText("Egresos por Compras $$$:");
        lblEgresos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelDatos.add(lblEgresos);

        txtEgresos.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtEgresos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtEgresos.setText("0");
        txtEgresos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtEgresos.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtEgresos.setEnabled(false);
        panelDatos.add(txtEgresos);

        lblIVA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblIVA.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblIVA.setText("IVA 19% $$$:");
        lblIVA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelDatos.add(lblIVA);

        txtIVA.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtIVA.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtIVA.setText("0");
        txtIVA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtIVA.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtIVA.setEnabled(false);
        panelDatos.add(txtIVA);

        lblGananciasNetas.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblGananciasNetas.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblGananciasNetas.setText("Ganancias Netas $$$:");
        lblGananciasNetas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelDatos.add(lblGananciasNetas);

        txtGananciasNetas.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtGananciasNetas.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtGananciasNetas.setText("0");
        txtGananciasNetas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtGananciasNetas.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtGananciasNetas.setEnabled(false);
        panelDatos.add(txtGananciasNetas);

        getContentPane().add(panelDatos, java.awt.BorderLayout.CENTER);

        panelBotones.setBackground(new java.awt.Color(255, 255, 255));
        panelBotones.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelBotones.setLayout(new java.awt.GridLayout(1, 5));

        cmdRegistrarCompraIgrediente.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cmdRegistrarCompraIgrediente.setText("Comprar Ingredientes...");
        cmdRegistrarCompraIgrediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRegistrarCompraIgredienteActionPerformed(evt);
            }
        });
        panelBotones.add(cmdRegistrarCompraIgrediente);

        cmdRegistrarVenta.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cmdRegistrarVenta.setText("Registrar Venta");
        cmdRegistrarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRegistrarVentaActionPerformed(evt);
            }
        });
        panelBotones.add(cmdRegistrarVenta);

        cmdCargarDeDisco.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cmdCargarDeDisco.setText("Cargar Datos...");
        cmdCargarDeDisco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCargarDeDiscoActionPerformed(evt);
            }
        });
        panelBotones.add(cmdCargarDeDisco);

        cmdGuardarADisco.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cmdGuardarADisco.setText("Guardar Datos...");
        cmdGuardarADisco.setActionCommand("Guardar Datos de Disco...");
        cmdGuardarADisco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdGuardarADiscoActionPerformed(evt);
            }
        });
        panelBotones.add(cmdGuardarADisco);

        cmdSalir1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cmdSalir1.setText("Apagar la Máquina");
        cmdSalir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSalir1ActionPerformed(evt);
            }
        });
        panelBotones.add(cmdSalir1);

        getContentPane().add(panelBotones, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdRegistrarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRegistrarVentaActionPerformed
        this.requerimiento3();
    }//GEN-LAST:event_cmdRegistrarVentaActionPerformed
    
    private void cmdCargarDeDiscoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCargarDeDiscoActionPerformed
        ArrayList<Ingrediente> ingredientes = null;
        JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("*.CSV", "csv");
        DiscoDuro discoDuro = new DiscoDuro();
        fc.setFileFilter(filtro);
        int seleccion = fc.showOpenDialog(getContentPane());
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File fichero = fc.getSelectedFile();
            //Complete para leer de disco los datos
            try {
              ingredientes = discoDuro.cargarDatos(fichero);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al leer fichero: " + e, "Lunch Machine Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        restaurante.setIngredientes(ingredientes);
        cargarCombos();
        comboFruta.setSelectedIndex(0);
        JOptionPane.showMessageDialog(this, "Datos Cargados Correctamente", "Lunch Machine Information", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_cmdCargarDeDiscoActionPerformed

    private void comboFrutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboFrutaActionPerformed
        this.requerimientos1y2();
    }//GEN-LAST:event_comboFrutaActionPerformed

    private void cmdRegistrarCompraIgredienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRegistrarCompraIgredienteActionPerformed
        this.setVisible(false);
        viewComprar.setVisible(true);
    }//GEN-LAST:event_cmdRegistrarCompraIgredienteActionPerformed

    private void comboProteinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboProteinaActionPerformed
        this.requerimientos1y2();
    }//GEN-LAST:event_comboProteinaActionPerformed

    private void comboGranoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboGranoActionPerformed
        this.requerimientos1y2();
    }//GEN-LAST:event_comboGranoActionPerformed

    private void comboAlmidonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboAlmidonActionPerformed
        this.requerimientos1y2();
    }//GEN-LAST:event_comboAlmidonActionPerformed

    private void cmdSalir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSalir1ActionPerformed
        this.dispose();
        System.exit(0);
    }//GEN-LAST:event_cmdSalir1ActionPerformed
    
    private void cmdGuardarADiscoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdGuardarADiscoActionPerformed
        ArrayList<Ingrediente> ingredientes = restaurante.getIngredientes();
        JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("*.CSV", "csv");
        DiscoDuro discoDuro = new DiscoDuro();
        fc.setFileFilter(filtro);
        int seleccion = fc.showOpenDialog(getContentPane());
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File fichero = fc.getSelectedFile();
            //Complete para leer de disco los datos
            try {
                discoDuro.guardarDatos(fichero, ingredientes);
                JOptionPane.showMessageDialog(this, "Datos Guardados Correctamente", "Lunch Machine Information", JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al guardar fichero: " + e, "Lunch Machine Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_cmdGuardarADiscoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdCargarDeDisco;
    private javax.swing.JButton cmdGuardarADisco;
    private javax.swing.JButton cmdRegistrarCompraIgrediente;
    private javax.swing.JButton cmdRegistrarVenta;
    private javax.swing.JButton cmdSalir1;
    private javax.swing.JComboBox<String> comboAlmidon;
    private javax.swing.JComboBox<String> comboFruta;
    private javax.swing.JComboBox<String> comboGrano;
    private javax.swing.JComboBox<String> comboProteina;
    private javax.swing.JLabel lblAmidon;
    private javax.swing.JLabel lblEgresos;
    private javax.swing.JLabel lblFruta;
    private javax.swing.JLabel lblGananciasNetas;
    private javax.swing.JLabel lblGrano;
    private javax.swing.JLabel lblIVA;
    private javax.swing.JLabel lblImagen;
    private javax.swing.JLabel lblIngresos;
    private javax.swing.JLabel lblPrecioAlmuerzo;
    private javax.swing.JLabel lblProteina;
    private javax.swing.JLabel lblSePuedePreparar;
    private javax.swing.JLabel lblSePuedePreparar_;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JPanel panelBotones;
    private javax.swing.JPanel panelDatos;
    private javax.swing.JPanel panelMenu;
    private javax.swing.JTextField txtEgresos;
    private javax.swing.JTextField txtGananciasNetas;
    private javax.swing.JTextField txtIVA;
    private javax.swing.JTextField txtIngresos;
    private javax.swing.JTextField txtPrecioAlmuerzo;
    // End of variables declaration//GEN-END:variables

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LunchMachineView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LunchMachineView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LunchMachineView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LunchMachineView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LunchMachineView().setVisible(true);
            }
        });
    }

    private void center() {
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - this.getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - this.getHeight()) / 2);
        this.setLocation(x, y);
    }

    public void actualizarGUI() {
        txtIngresos.setText(String.valueOf(getRestaurante().getIngresosPorVentas()));
        txtEgresos.setText(String.valueOf(getRestaurante().getEgresosPorCompras()));
        txtIVA.setText(String.valueOf(getRestaurante().getIVA()));
        txtGananciasNetas.setText(String.valueOf(getRestaurante().getGananciasNetas()));
        requerimientos1y2();
    }

    private void requerimientos1y2() {
        try {
            int precio = getRestaurante().consultarPrecioVenta(comboFruta.getSelectedItem().toString(), comboProteina.getSelectedItem().toString(), comboGrano.getSelectedItem().toString(), comboAlmidon.getSelectedItem().toString());
            boolean sePuedePreparar = getRestaurante().sePuedePreparar(comboFruta.getSelectedItem().toString(), comboProteina.getSelectedItem().toString(), comboGrano.getSelectedItem().toString(), comboAlmidon.getSelectedItem().toString());
            txtPrecioAlmuerzo.setText(String.valueOf(precio));
            lblSePuedePreparar.setText(sePuedePreparar ? "SI" : "NO");
            lblSePuedePreparar.setForeground(sePuedePreparar ? Color.green : Color.red);
        } catch (Exception e) {
            txtPrecioAlmuerzo.setText("0");
            lblSePuedePreparar.setText("NO");
            lblSePuedePreparar.setForeground(Color.red);
            JOptionPane.showMessageDialog(this, "Error al consultar el precio: " + e, "Lunch Machine Warning", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void requerimiento3() {
        try {
            getRestaurante().registrarVenta(comboFruta.getSelectedItem().toString(), comboProteina.getSelectedItem().toString(), comboGrano.getSelectedItem().toString(), comboAlmidon.getSelectedItem().toString());
            JOptionPane.showMessageDialog(this, "Venta exitosa", "Lunch Vending Machine", JOptionPane.INFORMATION_MESSAGE);
            actualizarGUI();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al registrar venta: " + e, "Lunch Machine Error", JOptionPane.ERROR_MESSAGE);
            comboFruta.setSelectedIndex(comboFruta.getSelectedIndex());
        }
    }

    public void requerimiento4(String nombre, int cantidad, int precioCompra, int tipo) {
        try {
            getRestaurante().registrarCompraIngrediente(nombre, cantidad, precioCompra, tipo);
            JOptionPane.showMessageDialog(this, "Compra exitosa", "Lunch Vending Machine", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al registrar compra: " + e, "Lunch Machine Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @return the restaurante
     */
    public Restaurante getRestaurante() {
        return restaurante;
    }

    /**
     * @param restaurante the restaurante to set
     */
    public void setRestaurante(Restaurante restaurante) {
        this.restaurante = restaurante;
    }

}
